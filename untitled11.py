# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fv9gWBbsC75-ClUQTfaML4WvA3e3hhq6
"""

# Step 1: Install YOLOv8
!pip install ultralytics

# Step 2: Import the YOLO module
from ultralytics import YOLO

# Step 3: Train YOLOv8 Model
# Initialize the YOLO model and specify the configuration file, then start training.
model = YOLO("yolov8n.yaml")  # You can choose yolov8n (nano), yolov8s (small), yolov8m (medium), etc.

# Train the model
results = model.train(
    data='/content/dataset/data.yaml',  # Path to the updated dataset configuration file
        epochs=50,      # Number of epochs
            imgsz=640,      # Image size for training
                batch=16,       # Batch size
                    project='YOLOv8_Training',  # Folder name for saving training results
                        name='YOLOv8_Results'       # Name of the run
                        )

                        # Step 4: Evaluate the Model
                        # This evaluates the model and outputs mAP, loss values, etc.
metrics = model.val()

# Step 5: Visualize Results
results.show()  # Show results of training and evaluation

# Step 6: Save the Model
model.save('/content/best_model.pt')  # Save the trained model weights for future inference or testing

# Optional: Download the Model to Local Machine
from google.colab import files
files.download('/content/best_model.pt')

# Step 1: Install YOLOv8
!pip install ultralytics

# Step 2: Import the YOLO module
from ultralytics import YOLO

# Step 3: Train YOLOv8 Model
# Initialize the YOLO model and specify the configuration file, then start training.
# Step 3: Train YOLOv8 Model
# Initialize the YOLO model and specify the configuration file, then start training.
model = YOLO("yolov8n.yaml")  # You can choose yolov8n (nano), yolov8s
from google.colab import files
files.download('/content/best_model.pt')